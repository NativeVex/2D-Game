using UnityEngine;
using System.Collections;

public class AttackScript : MonoBehaviour {
<<<<<<< HEAD
	public Vector3 direction;
    public float speed = 1f;
	public string[] tags;
||||||| merged common ancestors
    public string direction;
    float speed = 1f;
    Animator anim;
=======
    float speed = 1f;
    Animator anim;
>>>>>>> db2e815df2c9e834e41cdf86a6cbccdbb92e6a5f

<<<<<<< HEAD
    Animator anim;
	GameObject Parent;
||||||| merged common ancestors
    public const int STATE_FRONT_ATTACK = 2;
    public const int STATE_BACK_ATTACK = 6;
    public const int STATE_LEFT_ATTACK = 10;
    public const int STATE_RIGHT_ATTACK = 14;
=======
    public bool ATTACK = false;
    public const int DIR_FRONT = 0, DIR_BACK = 1, DIR_LEFT = 2, DIR_RIGHT = 3;
    public int direction;
>>>>>>> db2e815df2c9e834e41cdf86a6cbccdbb92e6a5f

    void Start () {
<<<<<<< HEAD
		Parent = this.gameObject.transform.parent.gameObject;
		anim = Parent.gameObject.GetComponent<Animator>();
		Parent.transform.position = direction;
||||||| merged common ancestors
        anim = this.gameObject.GetComponent<Animator>();
=======
        ATTACK = false;
        anim = this.gameObject.GetComponent<Animator>();
>>>>>>> db2e815df2c9e834e41cdf86a6cbccdbb92e6a5f
	}
	
	void Update () {
        if (anim.GetCurrentAnimatorStateInfo(0).IsName("Destroy"))
        {
<<<<<<< HEAD
			Destroy(gameObject.transform.parent.gameObject);
||||||| merged common ancestors
            Destroy(gameObject);
        }
        else
        {
            if (gameObject.tag.Equals("Player"))
            {
                if (direction.Equals("up"))
                {
                    gameObject.transform.Translate(Vector3.forward * speed * Time.deltaTime);
                }
                else if (direction.Equals("down"))
                {
                    gameObject.transform.Translate(Vector3.back * speed * Time.deltaTime);
                }
                else if (direction.Equals("left"))
                {
                    gameObject.transform.Translate(Vector3.left * speed * Time.deltaTime);
                }
                else if (direction.Equals("right"))
                {
                    gameObject.transform.Translate(Vector3.right * speed * Time.deltaTime);
                }
            }
            else if (gameObject.tag.Equals("Enemy"))
            {
                if (direction.Equals("up"))
                {
                    
                    gameObject.transform.Translate(Vector3.forward * speed * Time.deltaTime);
                }
                else if (direction.Equals("down"))
                {
                    gameObject.transform.Translate(Vector3.back * speed * Time.deltaTime);
                }
                else if (direction.Equals("left"))
                {
                    gameObject.transform.Translate(Vector3.left * speed * Time.deltaTime);
                }
                else if (direction.Equals("right"))
                {
                    gameObject.transform.Translate(Vector3.right * speed * Time.deltaTime);
                }
            }
=======
            Destroy(gameObject);
        }
        else
        {
            anim.SetInteger("Dir", direction);
            if (direction == DIR_FRONT)
            {
                gameObject.transform.Translate(Vector3.forward * speed * Time.deltaTime);
            }
            else if (direction == DIR_BACK)
            {
                gameObject.transform.Translate(Vector3.back * speed * Time.deltaTime);
            }
            else if (direction == DIR_LEFT)
            {
                gameObject.transform.Translate(Vector3.left * speed * Time.deltaTime);
            }
            else if (direction == DIR_RIGHT)
            {
                gameObject.transform.Translate(Vector3.right * speed * Time.deltaTime);
            }
>>>>>>> db2e815df2c9e834e41cdf86a6cbccdbb92e6a5f
        }
//        else
//        {
//            if (gameObject.tag.Equals("Player"))
//            {
//                if (direction.Equals("up"))
//                {
//                    gameObject.transform.Translate(Vector3.forward * speed * Time.deltaTime);
//                }
//                else if (direction.Equals("down"))
//                {
//                    gameObject.transform.Translate(Vector3.back * speed * Time.deltaTime);
//                }
//                else if (direction.Equals("left"))
//                {
//                    gameObject.transform.Translate(Vector3.left * speed * Time.deltaTime);
//                }
//                else if (direction.Equals("right"))
//                {
//                    gameObject.transform.Translate(Vector3.right * speed * Time.deltaTime);
//                }
//            }
//            else if (gameObject.tag.Equals("Enemy"))
//            {
//                if (direction.Equals("up"))
//                {
//                    
//                    gameObject.transform.Translate(Vector3.forward * speed * Time.deltaTime);
//                }
//                else if (direction.Equals("down"))
//                {
//                    gameObject.transform.Translate(Vector3.back * speed * Time.deltaTime);
//                }
//                else if (direction.Equals("left"))
//                {
//                    gameObject.transform.Translate(Vector3.left * speed * Time.deltaTime);
//                }
//                else if (direction.Equals("right"))
//                {
//                    gameObject.transform.Translate(Vector3.right * speed * Time.deltaTime);
//                }
//            }
//        }
    }

    void OnCollisionEnter(Collider col)
    {
		foreach(string temp in tags){
			if (col.gameObject.tag.Equals(temp))
	        {
	            Destroy(gameObject);
	        }
		}
    }
}
